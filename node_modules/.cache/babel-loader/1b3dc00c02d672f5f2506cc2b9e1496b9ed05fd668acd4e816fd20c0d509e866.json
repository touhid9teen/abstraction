{"ast":null,"code":"var _jsxFileName = \"/home/touhid/Desktop/abstraction/src/counter.js\",\n  _s = $RefreshSig$();\nimport useCounter from \"./hook/useCounter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    count,\n    makeIncrement,\n    makeDecrement\n  } = useCounter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This counter demonstrates abstraction using a custom React hook.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: makeDecrement,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: makeIncrement,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nH7K+3BRmRRP92Hp78aaipMWPjI=\", false, function () {\n  return [useCounter];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCounter","jsxDEV","_jsxDEV","App","_s","count","makeIncrement","makeDecrement","style","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/touhid/Desktop/abstraction/src/counter.js"],"sourcesContent":["import useCounter from \"./hook/useCounter\";\n\nfunction App() {\n  const { count, makeIncrement, makeDecrement } = useCounter();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        \n      }}\n    >\n      <div>\n        <h1>\n          This counter demonstrates abstraction using a custom React hook.\n        </h1>\n\n        <div>\n          <button onClick={makeDecrement}>-</button>\n\n          <span>{count}</span>\n\n          <button onClick={makeIncrement}>+</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,KAAK;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGP,UAAU,CAAC,CAAC;EAE5D,oBACEE,OAAA;IACEM,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE;IAEV,CAAE;IAAAC,QAAA,eAEFX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAEJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAELf,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAQgB,OAAO,EAAEX,aAAc;UAAAM,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAE1Cf,OAAA;UAAAW,QAAA,EAAOR;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAEpBf,OAAA;UAAQgB,OAAO,EAAEZ,aAAc;UAAAO,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CA5BQD,GAAG;EAAA,QACsCH,UAAU;AAAA;AAAAmB,EAAA,GADnDhB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}