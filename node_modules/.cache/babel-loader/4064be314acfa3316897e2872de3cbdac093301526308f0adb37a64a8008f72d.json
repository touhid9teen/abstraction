{"ast":null,"code":"var _jsxFileName = \"/home/touhid/Desktop/abstraction/src/counter.js\",\n  _s = $RefreshSig$();\nimport useCounter from \"./hook/useCounter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    count,\n    makeIncrement,\n    makeDecrement\n  } = useCounter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      gap: \"20px\",\n      textAlign: \"center\",\n      padding: \"0 20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This counter demonstrates abstraction using a custom React hook.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      style: {\n        maxWidth: \"400px\",\n        color: \"#555\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Abstraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" means hiding complex logic and showing only what is necessary.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"In this example, the counter logic (state and increment/decrement functions) is hidden inside a custom hook called \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"useCounter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 58\n        }, this), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"The \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), \" component only uses the values and functions it needs, keeping the UI simple and reusable.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeDecrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: \"0 10px\",\n          fontWeight: \"bold\"\n        },\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeIncrement,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nH7K+3BRmRRP92Hp78aaipMWPjI=\", false, function () {\n  return [useCounter];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCounter","jsxDEV","_jsxDEV","App","_s","count","makeIncrement","makeDecrement","style","display","flexDirection","justifyContent","alignItems","height","gap","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","color","onClick","margin","fontWeight","_c","$RefreshReg$"],"sources":["/home/touhid/Desktop/abstraction/src/counter.js"],"sourcesContent":["import useCounter from \"./hook/useCounter\";\n\nfunction App() {\n  const { count, makeIncrement, makeDecrement } = useCounter();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        gap: \"20px\",\n        textAlign: \"center\",\n        padding: \"0 20px\",\n      }}\n    >\n      <h1>This counter demonstrates abstraction using a custom React hook.</h1>\n\n      <ol style={{ maxWidth: \"400px\", color: \"#555\" }}>\n        <li>\n          <strong>Abstraction</strong> means hiding complex logic and showing\n          only what is necessary.{\" \"}\n        </li>{\" \"}\n        <li>\nIn this example, the counter logic (state and increment/decrement\n        functions) is hidden inside a custom hook called <code>useCounter</code>\n        . <br />\n        </li>\n        \n        The <em>App</em> component only uses the values and functions it needs,\n        keeping the UI simple and reusable.\n      </ol>\n\n      <div>\n        <button onClick={makeDecrement}>-</button>\n        <span style={{ margin: \"0 10px\", fontWeight: \"bold\" }}>{count}</span>\n        <button onClick={makeIncrement}>+</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,KAAK;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGP,UAAU,CAAC,CAAC;EAE5D,oBACEE,OAAA;IACEM,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,OAAO;MACfC,GAAG,EAAE,MAAM;MACXC,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFf,OAAA;MAAAe,QAAA,EAAI;IAAgE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzEnB,OAAA;MAAIM,KAAK,EAAE;QAAEc,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC9Cf,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,mEACL,EAAC,GAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EAAC,GAAG,eACTnB,OAAA;QAAAe,QAAA,GAAI,qHAE6C,eAAAf,OAAA;UAAAe,QAAA,EAAM;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,MACtE,eAAAnB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,QAED,eAAAnB,OAAA;QAAAe,QAAA,EAAI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,+FAElB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAQsB,OAAO,EAAEjB,aAAc;QAAAU,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CnB,OAAA;QAAMM,KAAK,EAAE;UAAEiB,MAAM,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAT,QAAA,EAAEZ;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrEnB,OAAA;QAAQsB,OAAO,EAAElB,aAAc;QAAAW,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAxCQD,GAAG;EAAA,QACsCH,UAAU;AAAA;AAAA2B,EAAA,GADnDxB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}